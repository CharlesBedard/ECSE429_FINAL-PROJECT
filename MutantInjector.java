import javax.sound.midi.SysexMessage;
import java.io.*;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.util.List;
import java.util.Scanner;

public class MutantInjector {

    public static void main(String[] args){

        String filename = "";
        String sourceFileName = "";
        Scanner sc;
        System.out.println("*****Starting mutant injector********");
        System.out.println("~ please see README.txt for instructions ~");
        System.out.println("~ NOTE THAT ANY PREVIOUSLY EXISTING DIRECTORY IN YOUR CURRENT WORKING DIRECTORY NAMED 'MUTANTS' WILL BE ERASED ONCE YOU ENTER A FILENAME ~");
        System.out.println("Enter file name of the mutant list generated by MutantMaker.java (must be same project directory): ");

        //Keep trying filenames gotten from scanner until you find a valid filename
        while(filename == "") {
            sc = new Scanner(System.in);
            filename = sc.nextLine();
            try {
                sc = new Scanner(new File(filename));
            } catch(FileNotFoundException fnfe){
                System.out.println("! ! ! Invalid File Name: \""+filename+"\" ! ! !");
                filename = ""; //Clear incorrect entry
                sc.close();
                System.out.println("Please try another file name: ");
            }finally{
                sc.close();//close scanner
            }
        }
        System.out.println("Please enter the name of the file containing the source code");
        while(sourceFileName == "") {
            sc = new Scanner(System.in);
            sourceFileName = sc.nextLine();
            try {
                sc = new Scanner(new File(sourceFileName));
            } catch(FileNotFoundException fnfe){
                System.out.println("! ! ! Invalid File Name: \""+sourceFileName+"\" ! ! !");
                sourceFileName = ""; //Clear incorrect entry
                sc.close();
                System.out.println("Please try another file name: ");
            }finally{
                sc.close();//close scanner
            }
        }
        File mutants = new File("mutants");
        if(mutants.exists() && mutants.isDirectory()){
            String[] entries = mutants.list();
            for(String s: entries){
                File currentFile = new File(mutants.getPath(), s);
                currentFile.delete();
            }
            mutants.delete();
        }
        new File("mutants").mkdirs();

        System.out.println(">Now generating mutated source code from file: \""+filename+"\"");
        runMutantInjector(sourceFileName,filename);
        //writeMutantFile(1,"hi",3, "test2.txt");
        System.out.println("****** Mutations complete! Please see mutants folder for all mutated versions of source code ******");
    }

    public static void runMutantInjector(String sourceFileName, String mutantListName){
        //Take number for code line referring to source code
        //Take mutant generated by MutantGenerator
        //Replace source code @ code line with mutated line
        //Write to a new file in mutants directory
        int mutantNum = 0;
        int sourceLine = 0;
        String mutantString = "";
        String nextLineStr = "";

        try{
            Scanner sc = new Scanner(new File(mutantListName));
            while(sc.hasNextLine()){
                sc.nextLine();//skip to next line past "original line of code
                nextLineStr = sc.nextLine();
                if(nextLineStr.contains("Total \"+\" mutants created:") || nextLineStr.contains("Total \"-\" mutants created:")){
                    return;
                }

                sourceLine = Integer.parseInt(nextLineStr);
                sc.nextLine();//skip original
                sc.nextLine();//skip "Mutated code"
                mutantString = sc.nextLine();
                writeMutantFile(sourceLine,mutantString,mutantNum,sourceFileName);
                mutantNum++;
                sc.nextLine();//skip past mutant type
                sc.nextLine();//skip empty line
            }
        }catch(IOException runMI){
            System.out.println("Error running mutant injector - bad file?");
        }
    }

    public static void writeMutantFile(int sourceLine, String mutantString, int mutantNum, String sourceFileName) {
        //Create numbered mutant file
        String mutantFileName = "mutant"+mutantNum+".java";
        File mutants = new File("mutants");
        try {
            File mutantFile = new File(mutants.getCanonicalPath() + File.separator + mutantFileName);
            mutantFile.createNewFile();
        }catch(IOException ioe){
            System.out.println("no mutants directory");
        }
        File sourceFile = new File(sourceFileName);

        Path newMutantPath = Paths.get("mutants"+File.separator+mutantFileName);
        Path sourcePath = Paths.get(sourceFileName);
        try {
            List<String> lines = Files.readAllLines(sourcePath, StandardCharsets.UTF_8);
            lines.set(sourceLine - 1, mutantString);
            lines.set(2,"public class mutant" + Integer.toString(mutantNum) + "{");
            Files.write(newMutantPath, lines, StandardCharsets.UTF_8);
        }catch(IOException ioe0){
            System.out.println("IO exception in writeMutantFile");
        }
    }//end of writeMutantFile

}
